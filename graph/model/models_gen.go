// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CoachesCoach struct {
	FirstName     string            `json:"firstName"`
	LastName      string            `json:"lastName"`
	PersonID      string            `json:"personId"`
	TeamID        string            `json:"teamId"`
	SortSequence  string            `json:"sortSequence"`
	College       string            `json:"college"`
	TeamSitesOnly *CoachesTeamSites `json:"teamSitesOnly"`
	IsAssistant   bool              `json:"isAssistant"`
}

type CoachesLeague struct {
	Standard []*CoachesCoach `json:"standard"`
}

type CoachesResponse struct {
	League *CoachesLeague `json:"league"`
}

type CoachesTeamSites struct {
	DisplayName string `json:"displayName"`
	CoachesCode string `json:"coachesCode"`
	CoachRole   string `json:"coachRole"`
	TeamCode    string `json:"teamCode"`
	TeamTricode string `json:"teamTricode"`
}

type PlayersDraft struct {
	TeamID     string `json:"teamId"`
	PickNum    string `json:"pickNum"`
	RoundNum   string `json:"roundNum"`
	SeasonYear string `json:"seasonYear"`
}

type PlayersLeagues struct {
	Africa     []*PlayersPlayer `json:"africa"`
	Sacramento []*PlayersPlayer `json:"sacramento"`
	Standard   []*PlayersPlayer `json:"standard"`
	Utah       []*PlayersPlayer `json:"utah"`
	Vegas      []*PlayersPlayer `json:"vegas"`
}

type PlayersPlayer struct {
	FirstName       string         `json:"firstName"`
	LastName        string         `json:"lastName"`
	PersonID        string         `json:"personId"`
	TeamID          string         `json:"teamId"`
	Jersey          string         `json:"jersey"`
	IsActive        bool           `json:"isActive"`
	Pos             string         `json:"pos"`
	HeightFeet      string         `json:"heightFeet"`
	HeightInches    string         `json:"heightInches"`
	HeightMeters    string         `json:"heightMeters"`
	WeightPounds    string         `json:"weightPounds"`
	WeightKilograms string         `json:"weightKilograms"`
	DateOfBirthUtc  string         `json:"dateOfBirthUTC"`
	Teams           []*PlayersTeam `json:"teams"`
	Draft           *PlayersDraft  `json:"draft"`
	NbaDebutYear    string         `json:"nbaDebutYear"`
	YearsPro        string         `json:"yearsPro"`
	CollegeName     string         `json:"collegeName"`
	LastAffiliation string         `json:"lastAffiliation"`
	Country         string         `json:"country"`
}

type PlayersResponse struct {
	League *PlayersLeagues `json:"league"`
}

type PlayersTeam struct {
	TeamID      string `json:"teamId"`
	SeasonStart string `json:"seasonStart"`
	SeasonEnd   string `json:"seasonEnd"`
}

type ScheduleGame struct {
	GameID            string              `json:"gameId"`
	SeasonStageID     int                 `json:"seasonStageId"`
	GameURLCode       string              `json:"gameUrlCode"`
	StatusNum         int                 `json:"statusNum"`
	ExtendedStatusNum int                 `json:"extendedStatusNum"`
	IsStartTimeTbd    bool                `json:"isStartTimeTBD"`
	StartTimeUtc      string              `json:"startTimeUTC"`
	IsBuzzerBeater    bool                `json:"isBuzzerBeater"`
	Period            *ScheduleGamePeriod `json:"period"`
	HTeam             *ScheduleGameTeam   `json:"hTeam"`
	VTeam             *ScheduleGameTeam   `json:"vTeam"`
}

type ScheduleGamePeriod struct {
	Current    int `json:"current"`
	Type       int `json:"type"`
	MaxRegular int `json:"maxRegular"`
}

type ScheduleGameTeam struct {
	TeamID string `json:"teamId"`
	Score  string `json:"score"`
	Win    string `json:"win"`
	Loss   string `json:"loss"`
}

type ScheduleLeague struct {
	Standard   []*ScheduleGame `json:"standard"`
	Africa     []*ScheduleGame `json:"africa"`
	Sacramento []*ScheduleGame `json:"sacramento"`
	Vegas      []*ScheduleGame `json:"vegas"`
	Utah       []*ScheduleGame `json:"utah"`
}

type ScheduleResponse struct {
	League *ScheduleLeague `json:"league"`
}

type ScoreboardArena struct {
	Name       string `json:"name"`
	IsDomestic bool   `json:"isDomestic"`
	City       string `json:"city"`
	StateAbbr  string `json:"stateAbbr"`
	Country    string `json:"country"`
}

type ScoreboardGame struct {
	SeasonStageID   int               `json:"seasonStageId"`
	SeasonYear      string            `json:"seasonYear"`
	LeagueName      string            `json:"leagueName"`
	GameID          string            `json:"gameId"`
	Arena           *ScoreboardArena  `json:"arena"`
	IsGameActivated bool              `json:"isGameActivated"`
	StartTimeUtc    string            `json:"startTimeUTC"`
	EndTimeUtc      string            `json:"endTimeUTC"`
	GameURLCode     string            `json:"gameUrlCode"`
	Period          *ScoreboardPeriod `json:"period"`
	VTeam           *ScoreboardTeam   `json:"vTeam"`
	HTeam           *ScoreboardTeam   `json:"hTeam"`
}

type ScoreboardLineScore struct {
	Score string `json:"score"`
}

type ScoreboardPeriod struct {
	Current       int  `json:"current"`
	Type          int  `json:"type"`
	MaxRegular    int  `json:"maxRegular"`
	IsHalftime    bool `json:"isHalftime"`
	IsEndOfPeriod bool `json:"isEndOfPeriod"`
}

type ScoreboardResponse struct {
	NumGames int               `json:"numGames"`
	Games    []*ScoreboardGame `json:"games"`
}

type ScoreboardTeam struct {
	TeamID     string                 `json:"teamId"`
	TriCode    string                 `json:"triCode"`
	Win        string                 `json:"win"`
	Loss       string                 `json:"loss"`
	SeriesWin  string                 `json:"seriesWin"`
	SeriesLoss string                 `json:"seriesLoss"`
	Score      string                 `json:"score"`
	Linescore  []*ScoreboardLineScore `json:"linescore"`
}

// Leagues that are associated with the NBA
type TeamsLeagues struct {
	// https://pr.nba.com/nba-africa-formation/
	Africa []*TeamsTeam `json:"africa"`
	// sacramento summer league
	Sacramento []*TeamsTeam `json:"sacramento"`
	// standard NBA league
	Standard []*TeamsTeam `json:"standard"`
	// utah summer league
	Utah []*TeamsTeam `json:"utah"`
	// vegas summer league
	Vegas []*TeamsTeam `json:"vegas"`
}

type TeamsResponse struct {
	League *TeamsLeagues `json:"league"`
}

// Team within the given league
type TeamsTeam struct {
	// the name of the city which the team represents
	City string `json:"city"`
	// the name of the team including the city
	FullName string `json:"fullName"`
	// if the team is a NBA franchise
	IsNBAFranchise bool `json:"isNBAFranchise"`
	// the name of the conference the team participates in
	ConfName string `json:"confName"`
	// three letter code of the team
	Tricode string `json:"tricode"`
	// abbreviation of the the team's name
	TeamShortName string `json:"teamShortName"`
	// the name of the division the team participates in
	DivName string `json:"divName"`
	// if the team was created for the all star weekend event
	IsAllStar bool `json:"isAllStar"`
	// teams nickname
	Nickname string `json:"nickname"`
	// internally used urlName
	URLName string `json:"urlName"`
	// internally used id
	TeamID string `json:"teamId"`
	// the alternative name of the team's city
	AltCityName string `json:"altCityName"`
}
